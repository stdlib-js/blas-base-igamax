{
  "version": 3,
  "sources": ["../lib/accessors.js", "../lib/ndarray.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math-base-special-abs' );\n\n\n// MAIN //\n\n/**\n* Finds the index of the first element having the maximum absolute value.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @returns {integer} index value\n*\n* @example\n* var toAccessorArray = require( '@stdlib/array-base-to-accessor-array' );\n* var arraylike2object = require( '@stdlib/array-base-arraylike2object' );\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var idx = igamax( 5, arraylike2object( toAccessorArray( x ) ), 1, 0 );\n* // returns 4\n*/\nfunction igamax( N, x, strideX, offsetX ) {\n\tvar xbuf;\n\tvar max;\n\tvar idx;\n\tvar get;\n\tvar ix;\n\tvar i;\n\tvar v;\n\n\t// Cache references to array data:\n\txbuf = x.data;\n\n\t// Cache references to element accessors:\n\tget = x.accessors[ 0 ];\n\n\tmax = abs( get( xbuf, offsetX ) );\n\tidx = 0;\n\tix = offsetX + strideX;\n\tfor ( i = 1; i < N; i++ ) {\n\t\tv = abs( get( xbuf, ix ) );\n\t\tif ( v > max ) {\n\t\t\tidx = i;\n\t\t\tmax = v;\n\t\t}\n\t\tix += strideX;\n\t}\n\treturn idx;\n}\n\n\n// EXPORTS //\n\nmodule.exports = igamax;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arraylike2object = require( '@stdlib/array-base-arraylike2object' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar accessors = require( './accessors.js' );\n\n\n// MAIN //\n\n/**\n* Finds the index of the first element having the maximum absolute value.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting index for `x`\n* @returns {integer} index value\n*\n* @example\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var idx = igamax( 5, x, 1, 0 );\n* // returns 4\n*/\nfunction igamax( N, x, strideX, offsetX ) {\n\tvar max;\n\tvar idx;\n\tvar ix;\n\tvar ox;\n\tvar v;\n\tvar i;\n\n\tif ( N < 1 ) {\n\t\treturn -1;\n\t}\n\tif ( N === 1 ) {\n\t\treturn 0;\n\t}\n\tox = arraylike2object( x );\n\tif ( ox.accessorProtocol ) {\n\t\treturn accessors( N, ox, strideX, offsetX );\n\t}\n\tmax = abs( x[ offsetX ] );\n\tidx = 0;\n\tix = offsetX + strideX;\n\tfor ( i = 1; i < N; i++ ) {\n\t\tv = abs( x[ ix ] );\n\t\tif ( v > max ) {\n\t\t\tidx = i;\n\t\t\tmax = v;\n\t\t}\n\t\tix += strideX;\n\t}\n\treturn idx;\n}\n\n\n// EXPORTS //\n\nmodule.exports = igamax;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar stride2offset = require( '@stdlib/strided-base-stride2offset' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\n/**\n* Finds the index of the first element having the maximum absolute value.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} strideX - `x` stride length\n* @returns {NumericArray} output array\n*\n* @example\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var idx = igamax( 5, x, 1 );\n* // returns 4\n*/\nfunction igamax( N, x, strideX ) {\n\treturn ndarray( N, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = igamax;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* BLAS level 1 routine to find the index of the first element having the maximum absolute value.\n*\n* @module @stdlib/blas-base-igamax\n*\n* @example\n* var igamax = require( '@stdlib/blas-base-igamax' )\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var idx = igamax( 5, x, 1 );\n* // returns 4\n*\n* @example\n* var igamax = require( '@stdlib/blas-base-igamax' )\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var idx = igamax( 5, x, 1, 0 );\n* // returns 4\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAM,QAAS,+BAAgC,EA0BnD,SAASC,EAAQC,EAAGC,EAAGC,EAASC,EAAU,CACzC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACA,EACAC,EAWJ,IARAL,EAAOH,EAAE,KAGTM,EAAMN,EAAE,UAAW,CAAE,EAErBI,EAAMP,EAAKS,EAAKH,EAAMD,CAAQ,CAAE,EAChCG,EAAM,EACNE,EAAKL,EAAUD,EACT,EAAI,EAAG,EAAIF,EAAG,IACnBS,EAAIX,EAAKS,EAAKH,EAAMI,CAAG,CAAE,EACpBC,EAAIJ,IACRC,EAAM,EACND,EAAMI,GAEPD,GAAMN,EAEP,OAAOI,CACR,CAKAT,EAAO,QAAUE,IChFjB,IAAAW,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAmB,QAAS,qCAAsC,EAClEC,EAAM,QAAS,+BAAgC,EAC/CC,EAAY,IAoBhB,SAASC,EAAQC,EAAGC,EAAGC,EAASC,EAAU,CACzC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACA,EAEJ,GAAKR,EAAI,EACR,MAAO,GAER,GAAKA,IAAM,EACV,MAAO,GAGR,GADAO,EAAKX,EAAkBK,CAAE,EACpBM,EAAG,iBACP,OAAOT,EAAWE,EAAGO,EAAIL,EAASC,CAAQ,EAK3C,IAHAC,EAAMP,EAAKI,EAAGE,CAAQ,CAAE,EACxBE,EAAM,EACNC,EAAKH,EAAUD,EACT,EAAI,EAAG,EAAIF,EAAG,IACnBQ,EAAIX,EAAKI,EAAGK,CAAG,CAAE,EACZE,EAAIJ,IACRC,EAAM,EACND,EAAMI,GAEPF,GAAMJ,EAEP,OAAOG,CACR,CAKAV,EAAO,QAAUI,IC/EjB,IAAAU,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,oCAAqC,EAC9DC,EAAU,IAmBd,SAASC,EAAQC,EAAGC,EAAGC,EAAU,CAChC,OAAOJ,EAASE,EAAGC,EAAGC,EAASL,EAAeG,EAAGE,CAAQ,CAAE,CAC5D,CAKAN,EAAO,QAAUG,ICLjB,IAAII,EAAc,QAAS,uDAAwD,EAC/EC,EAAO,IACPC,EAAU,IAKdF,EAAaC,EAAM,UAAWC,CAAQ,EAKtC,OAAO,QAAUD",
  "names": ["require_accessors", "__commonJSMin", "exports", "module", "abs", "igamax", "N", "x", "strideX", "offsetX", "xbuf", "max", "idx", "get", "ix", "v", "require_ndarray", "__commonJSMin", "exports", "module", "arraylike2object", "abs", "accessors", "igamax", "N", "x", "strideX", "offsetX", "max", "idx", "ix", "ox", "v", "require_main", "__commonJSMin", "exports", "module", "stride2offset", "ndarray", "igamax", "N", "x", "strideX", "setReadOnly", "main", "ndarray"]
}
