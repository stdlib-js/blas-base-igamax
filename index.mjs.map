{"version":3,"file":"index.mjs","sources":["../lib/ndarray.js","../lib/accessors.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from '@stdlib/array-base-arraylike2object';\nimport abs from '@stdlib/math-base-special-abs';\nimport accessors from './accessors.js';\n\n\n// MAIN //\n\n/**\n* Finds the index of the first element having the maximum absolute value.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting index for `x`\n* @returns {integer} index value\n*\n* @example\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var idx = igamax( 5, x, 1, 0 );\n* // returns 4\n*/\nfunction igamax( N, x, strideX, offsetX ) {\n\tvar max;\n\tvar idx;\n\tvar ix;\n\tvar ox;\n\tvar v;\n\tvar i;\n\n\tif ( N < 1 ) {\n\t\treturn -1;\n\t}\n\tif ( N === 1 ) {\n\t\treturn 0;\n\t}\n\tox = arraylike2object( x );\n\tif ( ox.accessorProtocol ) {\n\t\treturn accessors( N, ox, strideX, offsetX );\n\t}\n\tmax = abs( x[ offsetX ] );\n\tidx = 0;\n\tix = offsetX + strideX;\n\tfor ( i = 1; i < N; i++ ) {\n\t\tv = abs( x[ ix ] );\n\t\tif ( v > max ) {\n\t\t\tidx = i;\n\t\t\tmax = v;\n\t\t}\n\t\tix += strideX;\n\t}\n\treturn idx;\n}\n\n\n// EXPORTS //\n\nexport default igamax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport abs from '@stdlib/math-base-special-abs';\n\n\n// MAIN //\n\n/**\n* Finds the index of the first element having the maximum absolute value.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {integer} strideX - `x` stride length\n* @param {NonNegativeInteger} offsetX - starting `x` index\n* @returns {integer} index value\n*\n* @example\n* import toAccessorArray from '@stdlib/array-base-to-accessor-array';\n* import arraylike2object from '@stdlib/array-base-arraylike2object';\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var idx = igamax( 5, arraylike2object( toAccessorArray( x ) ), 1, 0 );\n* // returns 4\n*/\nfunction igamax( N, x, strideX, offsetX ) {\n\tvar xbuf;\n\tvar max;\n\tvar idx;\n\tvar get;\n\tvar ix;\n\tvar i;\n\tvar v;\n\n\t// Cache references to array data:\n\txbuf = x.data;\n\n\t// Cache references to element accessors:\n\tget = x.accessors[ 0 ];\n\n\tmax = abs( get( xbuf, offsetX ) );\n\tidx = 0;\n\tix = offsetX + strideX;\n\tfor ( i = 1; i < N; i++ ) {\n\t\tv = abs( get( xbuf, ix ) );\n\t\tif ( v > max ) {\n\t\t\tidx = i;\n\t\t\tmax = v;\n\t\t}\n\t\tix += strideX;\n\t}\n\treturn idx;\n}\n\n\n// EXPORTS //\n\nexport default igamax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport stride2offset from '@stdlib/strided-base-stride2offset';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\n/**\n* Finds the index of the first element having the maximum absolute value.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} strideX - `x` stride length\n* @returns {NumericArray} output array\n*\n* @example\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var idx = igamax( 5, x, 1 );\n* // returns 4\n*/\nfunction igamax( N, x, strideX ) {\n\treturn ndarray( N, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nexport default igamax;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* BLAS level 1 routine to find the index of the first element having the maximum absolute value.\n*\n* @module @stdlib/blas-base-igamax\n*\n* @example\n* var igamax = require( '@stdlib/blas-base-igamax' )\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var idx = igamax( 5, x, 1 );\n* // returns 4\n*\n* @example\n* var igamax = require( '@stdlib/blas-base-igamax' )\n*\n* var x = [ 1.0, 2.0, 3.0, 4.0, 5.0 ];\n*\n* var idx = igamax( 5, x, 1, 0 );\n* // returns 4\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["igamax","N","x","strideX","offsetX","max","idx","ix","ox","v","i","arraylike2object","accessorProtocol","xbuf","get","data","accessors","abs","ndarray","stride2offset","setReadOnly","main"],"mappings":";;maA4CA,SAASA,EAAQC,EAAGC,EAAGC,EAASC,GAC/B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKT,EAAI,EACR,OAAQ,EAET,GAAW,IAANA,EACJ,OAAO,EAGR,IADAO,EAAKG,EAAkBT,IACfU,iBACP,OCZF,SAAiBX,EAAGC,EAAGC,EAASC,GAC/B,IAAIS,EACAR,EACAC,EACAQ,EACAP,EACAG,EACAD,EAWJ,IARAI,EAAOX,EAAEa,KAGTD,EAAMZ,EAAEc,UAAW,GAEnBX,EAAMY,EAAKH,EAAKD,EAAMT,IACtBE,EAAM,EACNC,EAAKH,EAAUD,EACTO,EAAI,EAAGA,EAAIT,EAAGS,KACnBD,EAAIQ,EAAKH,EAAKD,EAAMN,KACXF,IACRC,EAAMI,EACNL,EAAMI,GAEPF,GAAMJ,EAEP,OAAOG,CACR,CDfSU,CAAWf,EAAGO,EAAIL,EAASC,GAKnC,IAHAC,EAAMY,EAAKf,EAAGE,IACdE,EAAM,EACNC,EAAKH,EAAUD,EACTO,EAAI,EAAGA,EAAIT,EAAGS,KACnBD,EAAIQ,EAAKf,EAAGK,KACHF,IACRC,EAAMI,EACNL,EAAMI,GAEPF,GAAMJ,EAEP,OAAOG,CACR,CEhCA,SAASN,EAAQC,EAAGC,EAAGC,GACtB,OAAOe,EAASjB,EAAGC,EAAGC,EAASgB,EAAelB,EAAGE,GAClD,CCOAiB,EAAAC,EAAA,UAAAH"}